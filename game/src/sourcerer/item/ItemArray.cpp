/***********************************************************************//**
 *	ItemArray.cpp
 *	Enlight Game Application
 *
 *	Created by Ryoutarou Kishi on 2010/05/19.
 *	Copyright 2010 Altoterras Corporation. All rights reserved.
 *
**//***********************************************************************/

////////////////////////////////////////////////////////////////////////////
// インクルードファイル

// Base

// Self
#include "ItemArray.h"

// Friends
#include "Item.h"

// External
#include "../../tfw/collection/List.h"

// Library

////////////////////////////////////////////////////////////////////////////

SRCR_BEGIN_NS

////////////////////////////////////////////////////////////////////////////
// 定数

////////////////////////////////////////////////////////////////////////////
// クラス

//==========================================================================
// ItemArray メソッド

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// アクセサ

/*---------------------------------------------------------------------*//**
	アイテム取得
**//*---------------------------------------------------------------------*/
const Item* ItemArray::getItem(int index) const
{
	if(_listItem == 0)
	{
		return 0L;
	}
	if((index < 0) || (_listItem->getCount() <= (u32)index))
	{
		return 0L;
	}
	return _listItem->getObject(index);
}

/*---------------------------------------------------------------------*//**
	アイテム取得
**//*---------------------------------------------------------------------*/
Item* ItemArray::item(int index) const
{
	if(_listItem == 0)
	{
		return 0L;
	}
	if((index < 0) || (_listItem->getCount() <= (u32)index))
	{
		return 0L;
	}
	return _listItem->getObject(index);
}

/*---------------------------------------------------------------------*//**
	アイテム数を得る
**//*---------------------------------------------------------------------*/
int ItemArray::getCount() const
{
	if(_listItem == 0)
	{
		return 0;
	}
	return _listItem->getCount();
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// 外部サービス

/*---------------------------------------------------------------------*//**
	アイテム追加
**//*---------------------------------------------------------------------*/
void ItemArray::addItem(Item* item)
{
	if(item == 0)
	{
		return;
	}
	if(_listItem == 0)
	{
		_listItem = new List<Item*>();
	}
	if(_listItem == 0)
	{
		ASSERT(_listItem != 0L);
		return;
	}
	_listItem->addTail(item);
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// 内部制御

/*---------------------------------------------------------------------*//**
	コンストラクタ
**//*---------------------------------------------------------------------*/
ItemArray::ItemArray()
	: _listItem(0L)
{
}

/*---------------------------------------------------------------------*//**
	コンストラクタ
**//*---------------------------------------------------------------------*/
ItemArray::ItemArray(Item* item1)
	: _listItem(new List<Item*>())
{
	ASSERT(_listItem != 0L);
	if(item1 != 0L)	{	_listItem->addTail(item1);	}
}

/*---------------------------------------------------------------------*//**
	コンストラクタ
**//*---------------------------------------------------------------------*/
ItemArray::ItemArray(Item* item1, Item* item2)
	: _listItem(new List<Item*>())
{
	ASSERT(_listItem != 0L);
	if(item1 != 0L)	{	_listItem->addTail(item1);	}
	if(item2 != 0L)	{	_listItem->addTail(item2);	}
}

/*---------------------------------------------------------------------*//**
	コピーコンストラクタ
**//*---------------------------------------------------------------------*/
ItemArray::ItemArray(const ItemArray& src)
	: _listItem(0L)
{
	copy(&src);
}

/*---------------------------------------------------------------------*//**
	デストラクタ
**//*---------------------------------------------------------------------*/
ItemArray::~ItemArray()
{
	clear();
}

/*---------------------------------------------------------------------*//**
	コピー
**//*---------------------------------------------------------------------*/
void ItemArray::copy(const ItemArray* src)
{
	clear();
	if(src->_listItem != 0L)
	{
		_listItem = new List<Item*>(*src->_listItem);
	}
}

/*---------------------------------------------------------------------*//**
	クリア
**//*---------------------------------------------------------------------*/
void ItemArray::clear()
{
	delete _listItem;
	_listItem = 0L;
}

////////////////////////////////////////////////////////////////////////////

SRCR_END_NS
